{"version":3,"sources":["service.js","Components/Home.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","window","location","hostname","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","getSearchHistory","handleChange","e","query","state","target","value","setState","setSelectedInput","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","getArticles","stop","handleSubmit","preventDefault","name","price","image","results","searchHistory","_this2","axios","get","then","res","data","queries","_this3","concat","contents","mainContent","records","post","catch","err","console","log","response","_this4","display","length","react_default","createElement","onSubmit","className","type","id","aria-describedby","placeholder","defaultValue","article","onChange","map","result","index","key","productDisplayName","src","smallImage","alt","productPrice","style","color","q","onClick","Component","Router","Switch","Route","exact","path","component","App","src_Router","Boolean","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3380dde0.chunk.js","sourcesContent":["import axios from 'axios';\n\n//const baseURL = 'http://localhost:3000/article';\nconst baseURL =\n  window.location.hostname === \"localhost\"\n    ? \"http://localhost:3000\"\n    : \"https://liverpooltest-2.herokuapp.com\";\n\n// Save query\nexport const saveQuery = (query) => {\n\taxios\n\t\t.post(`${baseURL}/`, {query: query})\n\t\t.then(res => {\n\t\t\t\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log('Error Storing Query =====> ', err.response);\n\t\t});\n};","import React, { Component } from 'react';\nimport axios from 'axios';\n// import { Link } from 'react-router-dom';\nimport { saveQuery } from '../service';\n\nexport default class Home extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tquery: '',\n\t\t\tname: '',\n\t\t\tprice: '',\n\t\t\timage: '',\n\t\t\tresults: [],\n\t\t\tsearchHistory: [],\n\t\t};\n\t}\n\tcomponentWillMount = () => {\n\t\t// Get articles on DB\n\t\tthis.getSearchHistory();\n\t};\n\thandleChange = e => {\n\t\tlet { query } = this.state;\n\t\tquery = e.target.value;\n\t\tthis.setState({ query });\n\t};\n\tgetSearchHistory() {\n\t\tconst baseURL =\n\t\t\twindow.location.hostname === 'localhost'\n\t\t\t\t? 'http://localhost:3000'\n\t\t\t\t: 'https://liverpooltest-2.herokuapp.com';\n\t\taxios.get(baseURL).then(res => {\n\t\t\tconst searchHistory = res.data.queries;\n\t\t\tthis.setState({ searchHistory });\n\t\t});\n\t}\n\tsetSelectedInput = query => {\n\t\tthis.setState({ query }, async () => {\n\t\t\tthis.getArticles();\n\t\t});\n\t};\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\t\tif (this.state.query !== '') {\n\t\t\tthis.getArticles();\n\t\t}\n\t};\n\t// Search article\n\tgetArticles() {\n\t\taxios\n\t\t\t.get(\n\t\t\t\t`https://www.liverpool.com.mx/tienda?s=${\n\t\t\t\t\tthis.state.query\n\t\t\t\t}&d3106047a194921c01969dfdec083925=json `,\n\t\t\t)\n\t\t\t.then(res => {\n                // Errores si el resultado no tiene algun atributo\n\t\t\t\tlet results =\n\t\t\t\t\tres.data.contents[0].mainContent[3].contents[0].records;\n\n\t\t\t\tif (results) {\n\t\t\t\t\tthis.setState({ results });\n\t\t\t\t\tsaveQuery(this.state.query, async () => {\n\t\t\t\t\t\tthis.getSearchHistory();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\trender() {\n\t\tconst { results } = this.state;\n\t\t\n\n\t\tconst { searchHistory } = this.state;\n\n\t\tlet display = false;\n\t\tif (results.length > 0) {\n\t\t\tdisplay = true;\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<hr />\n\t\t\t\t<h1>Buscador de Liverpool</h1>\n\n\t\t\t\t<hr />\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<div className=\"input-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tid=\"exampleInputEmail1\"\n\t\t\t\t\t\t\t\taria-describedby=\"emailHelp\"\n\t\t\t\t\t\t\t\tplaceholder=\"Busca un producto\"\n\t\t\t\t\t\t\t\tname=\"article\"\n\t\t\t\t\t\t\t\tdefaultValue={this.state.article}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\tBuscar\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t\t{display ? (\n\t\t\t\t\t<div className=\"card-columns\">\n\t\t\t\t\t\t{/* generate a card for each article */}\n\t\t\t\t\t\t{this.state.results.map((result, index) => (\n\t\t\t\t\t\t\t<div className=\"card p-3\" key={index}>\n\t\t\t\t\t\t\t\t<blockquote className=\"blockquote mb-0 card-body\">\n\t\t\t\t\t\t\t\t\t<h5 className=\"card-title\">\n\t\t\t\t\t\t\t\t\t\t{result.productDisplayName[0]}\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tclassName=\"img-thumbnail\"\n\t\t\t\t\t\t\t\t\t\tsrc={result.smallImage[0]}\n\t\t\t\t\t\t\t\t\t\talt={result.name}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<p>${result.productPrice[0]}</p>\n\t\t\t\t\t\t\t\t</blockquote>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t// show this if no articles are found on DB\n\t\t\t\t\t<h3>No hay articulos que mostrar</h3>\n\t\t\t\t)}\n\t\t\t\t<div className=\"sidenav\">\n\t\t\t\t\t<h3 style={{ color: 'white' }}>\n\t\t\t\t\t\t<strong>Historial</strong>\n\t\t\t\t\t</h3>\n\t\t\t\t\t{searchHistory ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{this.state.searchHistory.map((q, index) => (\n\t\t\t\t\t\t\t\t<h4\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tthis.setSelectedInput(q.query)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{q.query}\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './Components/Home';\n// import FormNew from './Components/FormNew';\n// import FormEdit from './Components/FormEdit';\n\nconst Router = () => (\n\t<Switch>\n\t\t<Route exact path=\"/\" component={Home} />\n\t\t{/* <Route exact path=\"/new\" component={FormNew} />\n        <Route exact path='/edit/:id' component={FormEdit} /> */}\n\t</Switch>\n);\n\nexport default Router;","import React, { Component } from 'react';\nimport './App.css';\nimport Router from './Router';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Router />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/js/dist/dropdown'\n\n\nconst WithRouter = () => (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\nReactDOM.render(<WithRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}